{
  "info": {
    "title": "SusanooAPIServer",
    "version": "v0.1",
    "description": "Susanoo API Server"
  },
  "basePath": "/api/v1/",
  "securityDefinitions": {
    "JWT": {
      "type": "apiKey",
      "description": "JWT authorization of an API",
      "name": "Authorization",
      "in": "header"
    }
  },
  "options": {
    "explorer": true,
    "swaggerOptions": {
      "urls": [
        {
          "url": "/docs/swagger.json",
          "name": "AppAPIs {v1}"
        },
        {
          "url": "/docs/swagger-web.json",
          "name": "WebAPIs {v1}"
        }
      ]
    }
  },
  "swagger": "2.0",
  "paths": {
    "/web/attachments": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "tags": [
          "Attachments"
        ],
        "summary": "Add attachment file",
        "produces": [
          "multipart/form-data"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "type": "file",
            "description": "The file to upload."
          }
        ],
        "responses": {
          "200": {
            "description": "attachment add successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "duplicate data"
          }
        }
      }
    },
    "/web/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "name": "Login",
        "summary": "Logs in a user",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "JWT": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string",
                  "format": "password"
                },
                "fingerprint": {
                  "type": "string"
                }
              }
            },
            "required": [
              "email",
              "password",
              "fingerprint"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "User found and logged in successfully.",
            "content": null,
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Not verified"
          },
          "403": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/web/auth/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "name": "Login",
        "summary": "Logout a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "properties": {
              "refreshToken": {
                "type": "string"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "JWT": []
          }
        ],
        "responses": {
          "200": {
            "description": "User is logged out from current session."
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Access denied, don't have permissions."
          }
        }
      }
    },
    "/web/auth/refresh-tokens": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "name": "Refresh Tokens",
        "summary": "Get Refresh Token for login user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "properties": {
              "refreshToken": {
                "type": "string"
              },
              "fingerprint": {
                "type": "string"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "JWT": []
          }
        ],
        "responses": {
          "200": {
            "description": "User is logged out from current session."
          },
          "400": {
            "description": "Bad request."
          },
          "403": {
            "description": "Access denied, don't have permissions."
          }
        }
      }
    },
    "/web/interests": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "tags": [
          "Interests"
        ],
        "name": "current",
        "summary": "Get interests",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Interests list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Interest"
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/web/stories": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "tags": [
          "Stories"
        ],
        "summary": "create new story from reporter",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "fromTime": {
                  "type": "date",
                  "format": "date"
                },
                "toTime": {
                  "type": "date",
                  "format": "date"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "storyStatus has been created",
            "content": null,
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "details": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "countryId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/Tag"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "duplicate data"
          }
        }
      },
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "tags": [
          "Stories"
        ],
        "summary": "list of stories",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "term",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "orderByDirection",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "storyStatus has been created",
            "content": null,
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "details": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "countryId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/Tag"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "duplicate data"
          }
        }
      }
    },
    "/web/stories/{id}": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "tags": [
          "Stories"
        ],
        "summary": "get story by id",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "get story",
            "content": null,
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "details": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "countryId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/Tag"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "duplicate data"
          }
        }
      },
      "put": {
        "security": [
          {
            "JWT": []
          }
        ],
        "tags": [
          "Stories"
        ],
        "summary": "delete story by id",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Story has been deleted",
            "content": null,
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Empty response, not found"
          },
          "409": {
            "description": "duplicate data"
          }
        }
      }
    },
    "web/stories/{id}": {
      "patch": {
        "security": [
          {
            "JWT": []
          }
        ],
        "tags": [
          "Stories"
        ],
        "summary": "update story status (SUBMITTED/IN_PROGRESS)",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "toTime": {
                  "type": "date",
                  "format": "date"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "story was updated"
          },
          "400": {
            "description": "Bad request validation error"
          },
          "401": {
            "description": "Story already in this status"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Empty response, not found"
          }
        }
      }
    },
    "/web/users/current": {
      "get": {
        "tags": [
          "Users"
        ],
        "name": "current",
        "summary": "get logging user details",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "JWT": []
          }
        ],
        "responses": {
          "200": {
            "description": "User found and logged in successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "mobileNumber": {
                      "type": "string"
                    },
                    "newEmail": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "isVerified": {
                      "type": "string"
                    },
                    "isConfirmedRegistration": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "patch": {
        "security": [
          {
            "JWT": []
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "Update User info.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "bio": {
                  "type": "string"
                },
                "countryId": {
                  "type": "string"
                },
                "facebookHandle": {
                  "type": "string"
                },
                "twitterHandle": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user updated successfully."
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "user not found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "list of users",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "term",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "interests",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "orderByDirection",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "storyStatus has been created",
            "content": null,
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "details": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "countryId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/Tag"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "duplicate data"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "list of users",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User Details",
            "content": null,
            "schema": null
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "duplicate data"
          }
        }
      }
    },
    "/web/users/current/password": {
      "put": {
        "security": [
          {
            "JWT": []
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "Change User Password.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "oldPassword": {
                  "type": "string"
                },
                "newPassword": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password changed.",
            "content": null,
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "user not found"
          }
        }
      }
    },
    "/web/users/current/profile-image": {
      "post": {
        "security": [
          {
            "JWT": []
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "Upload user profile",
        "produces": [
          "multipart/form-data"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "type": "file",
            "description": "The file to upload."
          }
        ],
        "responses": {
          "200": {
            "description": "attachment add successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "duplicate data"
          }
        }
      }
    },
    "/users/{id}/stories": {
      "get": {
        "security": [
          {
            "JWT": []
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "list of users stories",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "users stories",
            "content": null,
            "schema": null
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "duplicate data"
          }
        }
      }
    }
  },
  "definitions": {
    "AttachmentFiles": {
      "allOf": [
        {
          "required": [
            "id",
            "userId",
            "originalName",
            "mimeType",
            "size",
            "path"
          ]
        },
        {
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Unique attachment identifier"
            },
            "userId": {
              "type": "string",
              "format": "uuid",
              "description": "Owner user ID"
            },
            "originalName": {
              "type": "string",
              "maxLength": 255,
              "description": "Original filename"
            },
            "mimeType": {
              "type": "string",
              "description": "File MIME type"
            },
            "size": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1073741824,
              "description": "File size in bytes"
            },
            "path": {
              "type": "string",
              "description": "S3 storage path"
            },
            "category": {
              "type": "string",
              "enum": [
                "profile_image",
                "document",
                "image",
                "video",
                "audio",
                "archive",
                "other"
              ],
              "description": "File category"
            },
            "fullPath": {
              "type": "string",
              "readOnly": true,
              "description": "Full URL to file"
            },
            "thumbnails": {
              "type": "array",
              "readOnly": true,
              "description": "Available thumbnail sizes"
            },
            "streams": {
              "type": "array",
              "readOnly": true,
              "description": "Video stream variants"
            },
            "securityStatus": {
              "type": "string",
              "enum": [
                "pending",
                "safe",
                "quarantined",
                "blocked"
              ],
              "description": "Security scan status"
            },
            "metadata": {
              "type": "object",
              "description": "File metadata and properties"
            }
          }
        }
      ]
    },
    "Country": {
      "type": "object",
      "required": [
        "id",
        "name",
        "iso"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Unique country identifier",
          "example": 1
        },
        "name": {
          "type": "string",
          "minLength": 2,
          "maxLength": 80,
          "description": "Official country name",
          "example": "United States"
        },
        "niceName": {
          "type": "string",
          "minLength": 2,
          "maxLength": 80,
          "description": "Commonly used country name",
          "example": "United States"
        },
        "iso": {
          "type": "string",
          "pattern": "^[A-Z]{2}$",
          "description": "ISO 3166-1 alpha-2 country code",
          "example": "US"
        },
        "iso3": {
          "type": "string",
          "pattern": "^[A-Z]{3}$",
          "description": "ISO 3166-1 alpha-3 country code",
          "example": "USA"
        },
        "numcode": {
          "type": "integer",
          "minimum": 1,
          "maximum": 999,
          "description": "ISO 3166-1 numeric country code",
          "example": 840
        },
        "phonecode": {
          "type": "integer",
          "minimum": 1,
          "maximum": 9999,
          "description": "International dialing code",
          "example": 1
        },
        "currencyCode": {
          "type": "string",
          "pattern": "^[A-Z]{3}$",
          "description": "ISO 4217 currency code",
          "example": "USD"
        },
        "currencyName": {
          "type": "string",
          "description": "Currency name",
          "example": "US Dollar"
        },
        "currencySymbol": {
          "type": "string",
          "description": "Currency symbol",
          "example": "$"
        },
        "timezone": {
          "type": "string",
          "description": "Primary timezone",
          "example": "America/New_York"
        },
        "continent": {
          "type": "string",
          "enum": [
            "Africa",
            "Antarctica",
            "Asia",
            "Europe",
            "North America",
            "Oceania",
            "South America"
          ],
          "description": "Continental classification",
          "example": "North America"
        },
        "region": {
          "type": "string",
          "description": "Regional classification",
          "example": "Northern America"
        },
        "capital": {
          "type": "string",
          "description": "Capital city",
          "example": "Washington, D.C."
        },
        "languages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "ISO 639-1 language codes",
          "example": [
            "en"
          ]
        },
        "latitude": {
          "type": "number",
          "format": "float",
          "minimum": -90,
          "maximum": 90,
          "description": "Geographic latitude",
          "example": 39.8283
        },
        "longitude": {
          "type": "number",
          "format": "float",
          "minimum": -180,
          "maximum": 180,
          "description": "Geographic longitude",
          "example": -98.5795
        },
        "population": {
          "type": "integer",
          "minimum": 0,
          "description": "Population count",
          "example": 331900000
        },
        "area": {
          "type": "number",
          "format": "float",
          "minimum": 0,
          "description": "Area in square kilometers",
          "example": 9833517
        },
        "isActive": {
          "type": "boolean",
          "description": "Whether country is active",
          "example": true
        },
        "metadata": {
          "type": "object",
          "description": "Additional country metadata"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp"
        }
      }
    },
    "Interest": {
      "allOf": [
        {
          "required": [
            "id"
          ]
        },
        {
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "type": "string"
            },
            "selected": {
              "type": "number"
            }
          }
        }
      ]
    },
    "Story": {
      "type": "object",
      "required": [
        "title",
        "details",
        "userId",
        "type",
        "status"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique story identifier",
          "example": 123
        },
        "title": {
          "type": "string",
          "description": "Story title",
          "minLength": 3,
          "maxLength": 500,
          "example": "Breaking News: Major Development"
        },
        "details": {
          "type": "string",
          "description": "Story content/details",
          "minLength": 10,
          "maxLength": 10000,
          "example": "Detailed description of the story..."
        },
        "type": {
          "type": "string",
          "enum": [
            "TIP_OFF",
            "STORY",
            "REPORT"
          ],
          "description": "Story type classification",
          "example": "STORY"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUBMITTED",
            "DRAFT",
            "IN_PROGRESS",
            "ARCHIVED",
            "PUBLISHED",
            "APPROVED",
            "ASSIGNED",
            "PENDING",
            "FOR_REVIEW_SE",
            "EXPIRED",
            "DELETED"
          ],
          "description": "Current story status",
          "example": "DRAFT"
        },
        "userId": {
          "type": "string",
          "format": "uuid",
          "description": "Story author/owner ID"
        },
        "fromTime": {
          "type": "string",
          "format": "date-time",
          "description": "Story event start time"
        },
        "toTime": {
          "type": "string",
          "format": "date-time",
          "description": "Story event end time"
        },
        "priority": {
          "type": "string",
          "enum": [
            "LOW",
            "NORMAL",
            "HIGH",
            "URGENT"
          ],
          "description": "Story priority level",
          "example": "NORMAL"
        },
        "isInEditMode": {
          "type": "boolean",
          "description": "Whether story is currently being edited",
          "example": false
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Associated tags",
          "example": [
            "politics",
            "breaking-news"
          ]
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Attachment IDs"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp"
        }
      }
    },
    "Tag": {
      "allOf": [
        {
          "required": [
            "id"
          ]
        },
        {
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "type": "string"
            }
          }
        }
      ]
    },
    "User": {
      "allOf": [
        {
          "required": [
            "id"
          ]
        },
        {
          "properties": {
            "status": {
              "type": "string"
            },
            "data": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "mobileNumber": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "countryId": {
                  "type": "id"
                }
              }
            }
          }
        }
      ]
    }
  },
  "responses": {},
  "parameters": {},
  "tags": []
}